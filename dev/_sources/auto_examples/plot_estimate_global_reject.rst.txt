
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_estimate_global_reject.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_estimate_global_reject.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_estimate_global_reject.py:


===============================
Find global rejection threshold
===============================

This example demonstrates how to use :mod:`autoreject` to
find global rejection thresholds.

.. GENERATED FROM PYTHON SOURCE LINES 9-13

.. code-block:: default


    # Author: Mainak Jas <mainak.jas@telecom-paristech.fr>
    # License: BSD-3-Clause








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Let us import the data using MNE-Python and epoch it.

.. GENERATED FROM PYTHON SOURCE LINES 15-38

.. code-block:: default


    import mne
    from mne import io
    from mne.datasets import sample

    event_id = {'Visual/Left': 3}
    tmin, tmax = -0.2, 0.5

    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'
    event_fname = data_path + ('/MEG/sample/sample_audvis_filt-0-40_raw-'
                               'eve.fif')

    raw = io.read_raw_fif(raw_fname, preload=True)
    events = mne.read_events(event_fname)

    include = []
    picks = mne.pick_types(raw.info, meg=True, eeg=True, stim=False,
                           eog=True, include=include, exclude='bads')
    epochs = mne.Epochs(raw, events, event_id, tmin, tmax,
                        picks=picks, baseline=(None, 0), preload=True,
                        reject=None, verbose=False, detrend=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Opening raw data file /home/circleci/mne_data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.
    Reading 0 ... 41699  =      0.000 ...   277.709 secs...




.. GENERATED FROM PYTHON SOURCE LINES 39-40

Now we get the rejection dictionary

.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: default


    from autoreject import get_rejection_threshold  # noqa

    # We can use the `decim` parameter to only take every nth time slice.
    # This speeds up the computation time. Note however that for low sampling
    # rates and high decimation parameters, you might not detect "peaky artifacts"
    # (with a fast timecourse) in your data. A low amount of decimation however is
    # almost always beneficial at no decrease of accuracy.
    reject = get_rejection_threshold(epochs, decim=2)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/project/autoreject/autoreject.py:218: RuntimeWarning: The measurement information indicates a low-pass frequency of 40 Hz. The decim=2 parameter will result in a sampling frequency of 75.0769 Hz, which can cause aliasing artifacts.
      epochs.decimate(decim=decim)
    Estimating rejection dictionary for mag
    Estimating rejection dictionary for grad
    Estimating rejection dictionary for eeg
    Estimating rejection dictionary for eog




.. GENERATED FROM PYTHON SOURCE LINES 51-52

and print it

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default


    print('The rejection dictionary is %s' % reject)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    The rejection dictionary is {'mag': 3.284586001851895e-12, 'grad': 1.0357642173052411e-10, 'eeg': 5.844322373549318e-05, 'eog': 6.559782003227096e-05}




.. GENERATED FROM PYTHON SOURCE LINES 56-57

Finally, the cleaned epochs

.. GENERATED FROM PYTHON SOURCE LINES 57-59

.. code-block:: default

    epochs.drop_bad(reject=reject)
    epochs.average().plot()



.. image-sg:: /auto_examples/images/sphx_glr_plot_estimate_global_reject_001.png
   :alt: EEG (59 channels), Gradiometers (203 channels), Magnetometers (102 channels)
   :srcset: /auto_examples/images/sphx_glr_plot_estimate_global_reject_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x500 with 3 Axes>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.589 seconds)


.. _sphx_glr_download_auto_examples_plot_estimate_global_reject.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_estimate_global_reject.py <plot_estimate_global_reject.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_estimate_global_reject.ipynb <plot_estimate_global_reject.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
